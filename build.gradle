plugins {
    id "java"
    id "com.diffplug.eclipse.apt" version "3.24.0"
    id "application"
    id "com.google.cloud.tools.jib" version "2.6.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group "com.pchrzasz"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    providedRuntime
}

apply from: "gradle/docker.gradle"

defaultTasks "run"

shadowJar {
    mergeServiceFiles()
}

jar {
    manifest {
        attributes("Multi-Release": true)
    }
}

dependencies {
    annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    annotationProcessor("io.micronaut.configuration:micronaut-openapi")
    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.swagger.core.v3:swagger-annotations")

    implementation("io.micronaut:micronaut-management")

    implementation("io.micronaut:micronaut-discovery-client")

    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    implementation("io.micronaut.reactor:micronaut-reactor")

    runtimeOnly("ch.qos.logback:logback-classic")

    testAnnotationProcessor(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation "org.assertj:assertj-core:3.17.1"

    compileOnly("org.graalvm.nativeimage:svm:20.2.0")
    annotationProcessor("io.micronaut:micronaut-graal")
}

mainClassName = "com.pchrzasz.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.addAll([
        '-parameters',
        // enables incremental compilation
        '-Amicronaut.processing.incremental=true',
        '-Amicronaut.processing.annotations=com.pchrzasz.*',
        "-Amicronaut.processing.group=$project.group",
        "-Amicronaut.processing.module=$project.name",
    ])
}


tasks.withType(JavaExec) {
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    if (gradle.startParameter.continuous) {
        systemProperties(
            'micronaut.io.watch.restart':'true',
            'micronaut.io.watch.enabled':'true',
            "micronaut.io.watch.paths":"src/main"
        )
    }
}

task cleanResources(type: Delete) {
    delete "build/resources"
}

compileJava.dependsOn processResources
